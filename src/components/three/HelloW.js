/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useControls} from 'leva';


export function Model(props) {
 
 const ref = useRef();
  const {scale } = useControls({scale:"1.4"})
  const { nodes, materials } = useGLTF("../../../../3d/textos.glb");
 const [hovered, hover] = useState(false);
  
 
  return (
    <group {...props} dispose={null}>
      <mesh
        ref={ref}
        geometry={nodes.Text008.geometry}
        material={materials["Material.004"]}
        position={[-200,0,370]}
        rotation={[Math.PI / 2, 0, .2]}
        scale={hovered ? scale * 1 : scale}
        onPointerOver={(event) => hover(true)}
           onPointerOut={(event) => hover(false)}
      />
      
      <rectAreaLight args={['#b8f1c4',500]} position={[-200,-60,430]}/>
      <pointLight args={['#b8f1c4',.02]} position={[-200,60,380]}/>
      {/* <perspectiveCamera/> */}
    </group>
  );
}

useGLTF.preload("../../../../3d/textos.glb");

export default Model;
